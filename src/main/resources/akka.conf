include "slick"

akka {
  log-dead-letters-during-shutdown = on
  loglevel = WARNING
  log-dead-letters = on

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  serialize-messages = off // verify that messages are serializable

  actor {
    // 2.6.5? provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = on // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = on // log all actor lifecycle events of all actors
      event-stream = on // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }

    // TODO: Temp
    allow-java-serialization = on

    serializers {
    }

    serialization-bindings {
    }
  }

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
  }
}

jdbc-journal {
  tables {
    journal {
      tableName = "journal"
      schemaName = ${database.schema}
    }
  }

  slick = ${slick}

  event-adapters {
    // tagging = "com.github.dnvriend.adapter.TaggingEventAdapter"
  }

  event-adapter-bindings {
    // "com.github.dnvriend.data.Event.PBPersonCreated" = tagging
  }
}

jdbc-snapshot-store {
  tables {
    snapshot {
      tableName = "snapshot"
      schemaName = ${database.schema}
    }
  }

  slick = ${slick}
}

